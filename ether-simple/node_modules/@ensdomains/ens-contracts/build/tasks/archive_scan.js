"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = require("fs");
const config_1 = require("hardhat/config");
const hardhat_config_1 = require("../hardhat.config");
(0, config_1.task)('archive-scan', 'Scans the deployments for unarchived deployments').setAction(async (_, hre) => {
    const network = hre.network.name;
    const deployments = await hre.deployments.all();
    for (const deploymentName in deployments) {
        const deployment = deployments[deploymentName];
        if (!deployment.receipt || !deployment.bytecode)
            continue;
        const archiveName = `${deploymentName}_${network}_${deployment.receipt.blockNumber}`;
        const archivePath = `${hardhat_config_1.archivedDeploymentPath}/${archiveName}.sol`;
        if ((0, fs_1.existsSync)(archivePath)) {
            continue;
        }
        let fullName;
        try {
            await hre.deployments.getArtifact(deploymentName);
            fullName = `${deploymentName}.sol:${deploymentName}`;
        }
        catch (e) {
            if (e._isHardhatError && e.number === 701) {
                fullName = e.messageArguments.candidates.split('\n')[1];
            }
            else {
                throw e;
            }
        }
        await hre.run('save', {
            contract: deploymentName,
            block: String(deployment.receipt.blockNumber),
            fullName,
        });
    }
});
